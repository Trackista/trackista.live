name: Deploy to Server

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    # Опция 1: FTP деплой
    - name: Deploy via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      if: ${{ secrets.FTP_SERVER }}
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./dist/
        server-dir: /public_html/
        
    # Опция 2: SSH деплой  
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.3
      if: ${{ secrets.SSH_HOST }}
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          cd ${{ secrets.PROJECT_PATH || '/var/www/html' }}
          git pull origin main || echo "No git repo on server"
          npm ci || echo "NPM install failed"
          npm run build || echo "Build failed"
          cp -r dist/* . || echo "Copy failed"
          
    # Опция 3: rsync деплой
    - name: Deploy via rsync
      uses: burnett01/rsync-deployments@7.0.1
      if: ${{ secrets.RSYNC_HOST }}
      with:
        switches: -avzr --delete
        path: dist/
        remote_path: ${{ secrets.REMOTE_PATH }}
        remote_host: ${{ secrets.RSYNC_HOST }}
        remote_user: ${{ secrets.RSYNC_USER }}
        remote_key: ${{ secrets.RSYNC_KEY }}