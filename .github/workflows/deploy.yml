name: Deploy to Server

on:
  push:
    branches: [ main ]

permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build application
      run: npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: eu-central-1
        
    - name: Deploy to S3 (Ultra Aggressive Cache Busting)
      run: |
        echo "üßπ Ultra aggressive S3 bucket cleaning..."
        # –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ S3 bucket
        aws s3 rm s3://trackista-live --recursive
        
        echo "‚è≥ Waiting for S3 cleanup to complete..."
        sleep 10
        
        echo "üöÄ Deploying with timestamp-based cache busting..."
        TIMESTAMP=$(date +%s)
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∑–∞–Ω–æ–≤–æ —Å timestamp
        aws s3 sync dist/ s3://trackista-live --delete
        
        # Ultra aggressive no-cache –¥–ª—è HTML —Ñ–∞–π–ª–æ–≤
        aws s3 cp dist/index.html s3://trackista-live/index.html \
          --cache-control "no-cache, no-store, must-revalidate, max-age=0, s-maxage=0, proxy-revalidate" \
          --expires "Thu, 01 Jan 1970 00:00:00 GMT" \
          --metadata-directive REPLACE \
          --metadata "timestamp=$TIMESTAMP"
        
        # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ assets —Å ultra aggressive no-cache
        aws s3 sync dist/assets/ s3://trackista-live/assets/ \
          --cache-control "no-cache, no-store, must-revalidate, max-age=0, s-maxage=0" \
          --expires "Thu, 01 Jan 1970 00:00:00 GMT" \
          --metadata-directive REPLACE
        
        echo "üîß Configuring S3 for SPA routing with proper error handling..."
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        echo "üìã Checking build files..."
        ls -la dist/
        
        # –°–æ–∑–¥–∞–µ–º error.html –∫–∞–∫ –∫–æ–ø–∏—é index.html –¥–ª—è SPA routing
        if [ -f "dist/index.html" ]; then
          echo "‚úÖ Found dist/index.html, setting up SPA routing..."
          aws s3 cp dist/index.html s3://trackista-live/error.html \
            --cache-control "no-cache, no-store, must-revalidate, max-age=0, s-maxage=0, proxy-revalidate" \
            --expires "Thu, 01 Jan 1970 00:00:00 GMT" \
            --metadata-directive REPLACE
        else
          echo "‚ùå dist/index.html not found! Build may have failed."
          exit 1
        fi
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º S3 –¥–ª—è SPA (Single Page Application)
        aws s3 website s3://trackista-live --index-document index.html --error-document error.html
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∫–æ–ø–∏—Ä—É–µ–º index.html –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–æ—É—Ç–æ–≤
        echo "üìÅ Setting up SPA routing fallbacks..."
        aws s3 cp dist/index.html s3://trackista-live/density \
          --cache-control "no-cache, no-store, must-revalidate, max-age=0" \
          --metadata-directive REPLACE
        
        aws s3 cp dist/index.html s3://trackista-live/screener \
          --cache-control "no-cache, no-store, must-revalidate, max-age=0" \
          --metadata-directive REPLACE
          
        aws s3 cp dist/index.html s3://trackista-live/community \
          --cache-control "no-cache, no-store, must-revalidate, max-age=0" \
          --metadata-directive REPLACE
        
        echo "‚úÖ Deployment completed with SPA routing support. Timestamp: $TIMESTAMP"